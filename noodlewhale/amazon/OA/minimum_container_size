#https://aonecode.com/Amazon-Online-Assessment-Minimum-Total-Container-Size
#小镇做题家的极限又来了
#time: O(n*n*d)
#space:O(nd)
#space:
import functools
def get_min(P,D):
    m = len(P)
    if m < D:
        return -1
    if m == D:
        return sum(P)
    #start from day index d, you have to place from index x
    @functools.lru_cache(None)
    def dfs(d,x):
        if d == D-1:
            return max(P[x:])
        res = float('inf')
        cur_max = float('-inf')
        for index in range(x,m-(D-d)+1):
            cur_max = max(cur_max,P[index])
            res = min(res, cur_max+dfs(d+1,index+1))
        return res
    return dfs(0,0)

#test case:
print(get_min([10,2,20,5,15,10,1],3))
print(get_min([5,4,2,4,3,4,5,4],4))
print(get_min([22,12,1,14,17],2))
    
